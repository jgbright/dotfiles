# oh-my-posh
# Uncomment one of these presets to get started.
# docs: https://ohmyposh.dev/docs/installation/customize

# I like these the best.

oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\kushal.omp.json" | Invoke-Expression


# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\slim.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\clean-detailed.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\iterm2.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\night-owl.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\sim-web.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\slimfat.omp.json" | Invoke-Expression


# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\1_shell.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\agnoster.minimal.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\agnoster.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\agnosterplus.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\aliens.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\amro.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\atomic.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\atomicBit.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\avit.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\blue-owl.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\blueish.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\bubbles.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\bubblesextra.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\bubblesline.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\capr4n.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\catppuccin_frappe.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\catppuccin_latte.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\catppuccin_macchiato.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\catppuccin_mocha.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\catppuccin.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\cert.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\chips.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\cinnamon.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\clean-detailed.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\cloud-context.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\cloud-native-azure.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\cobalt2.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\craver.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\darkblood.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\devious-diamonds.omp.yaml" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\di4am0nd.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\dracula.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\easy-term.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\emodipt-extend.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\emodipt.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\fish.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\free-ukraine.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\froczh.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\glowsticks.omp.yaml" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\gmay.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\grandpa-style.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\gruvbox.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\half-life.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\honukai.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\hotstick.minimal.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\hul10.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\hunk.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\huvix.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\if_tea.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\illusi0n.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\iterm2.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\jandedobbeleer.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\jblab_2021.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\jonnychipz.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\json.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\jtracey93.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\jv_sitecorian.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\kali.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\kushal.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\lambda.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\lambdageneration.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\larserikfinholt.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\lightgreen.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\M365Princess.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\marcduiker.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\markbull.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\material.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\microverse-power.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\mojada.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\montys.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\mt.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\multiverse-neon.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\negligible.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\neko.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\night-owl.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\nordtron.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\nu4a.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\onehalf.minimal.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\paradox.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\pararussel.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\patriksvensson.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\peru.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\pixelrobots.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\plague.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\poshmon.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\powerlevel10k_classic.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\powerlevel10k_lean.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\powerlevel10k_modern.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\powerlevel10k_rainbow.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\powerline.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\probua.minimal.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\pure.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\quick-term.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\remk.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\robbyrussel.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\robbyrussell.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\rudolfs-dark.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\rudolfs-light.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\sim-web.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\slim.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\slimfat.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\smoothie.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\sonicboom_dark.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\sonicboom_light.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\sorin.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\space.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\spaceship.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\star.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\stelbent-compact.minimal.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\stelbent.minimal.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\takuya.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\the-unnamed.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\thecyberden.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\tiwahu.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\tokyo.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\tokyonight_storm.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\tonybaloney.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\uew.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\unicorn.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\velvet.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\wholespace.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\wopian.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\xtoys.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\ys.omp.json" | Invoke-Expression
# oh-my-posh init pwsh --config "${env:POSH_THEMES_PATH}\zash.omp.json" | Invoke-Expression


# dotnet suggest shell start
if (Get-Command "dotnet-suggest" -errorAction SilentlyContinue) {
    $availableToComplete = (dotnet-suggest list) | Out-String
    $availableToCompleteArray = $availableToComplete.Split([Environment]::NewLine, [System.StringSplitOptions]::RemoveEmptyEntries)

    Register-ArgumentCompleter -Native -CommandName $availableToCompleteArray -ScriptBlock {
        param($wordToComplete, $commandAst, $cursorPosition)
        $fullpath = (Get-Command $commandAst.CommandElements[0]).Source

        $arguments = $commandAst.Extent.ToString().Replace('"', '\"')
        dotnet-suggest get -e $fullpath --position $cursorPosition -- "$arguments" | ForEach-Object {
            [System.Management.Automation.CompletionResult]::new($_, $_, 'ParameterValue', $_)
        }
    }
}
else {
    "Unable to provide System.CommandLine tab completion support unless the [dotnet-suggest] tool is first installed."
    "See the following for tool installation: https://www.nuget.org/packages/dotnet-suggest"
}

$env:DOTNET_SUGGEST_SCRIPT_VERSION = "1.0.2"
# dotnet suggest script end


function gstart {
    # do actual thinggstart() {
    $initial_commit_message = "chore: empty initial commit"

    git init
    if (!$?) {
        throw 'error'
    }
    git commit --allow-empty --message "$initial_commit_message"
    if (!$?) {
        throw 'error'
    }
}

function gyolo {
    $wip_commit_message = @"
-- wip --

[nocicd]
"@

    git add --all
    if (!$?) {
        throw 'error'
    }
    git commit -m "$wip_commit_message"
    if (!$?) {
        throw 'error'
    }
    git push
    if (!$?) {
        throw 'error'
    }
}
    
